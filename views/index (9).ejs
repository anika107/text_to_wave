<!DOCTYPE html>
<html>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Convert Text to Voice</title>
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"
        integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">

    <!-- Optional theme -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css"
        integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">

    <!-- Latest compiled and minified JavaScript -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"
        integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"
        crossorigin="anonymous"></script>

</head>

<body>
    <div class="container">
        <div class="row">
            <span class="text-center">
                <h2 class="text-success">Convert Text to Voice</h2>
                <br> <br>
                Select Voice: <select class="center" name="" id="voiceList"></select>
                <br>
                <form action="/generate" method = "POST">
                <input type="text" id="inputText" placeholder="Write your message" name = "msg">
                <br>
                <br>
                <button class="btn btn-success" id="btnSpeak">Speak</button>
                </form>
            </span>

            <!-- Create a div where the audio waves will be shown -->
            <div id="audio-spectrum"></div>

            <!-- Create action buttons -->
            <input type="button" id="btn-play" value="Play" disabled="disabled" />
            <input type="button" id="btn-pause" value="Pause" disabled="disabled" />
            <input type="button" id="btn-stop" value="Stop" disabled="disabled" />

            <!-- Load the wavesurferscript , in this case from a CDN -->
            <script src="https://cdnjs.cloudflare.com/ajax/libs/wavesurfer.js/1.3.7/wavesurfer.min.js"></script>

            <script>
                 
                 var toSpeak;
                // Store the 3 buttons in some object
                var buttons = {
                    play: document.getElementById("btn-play"),
                    pause: document.getElementById("btn-pause"),
                    stop: document.getElementById("btn-stop")
                };

                // Create an instance of wave surfer with its configuration
                var Spectrum = WaveSurfer.create({
                    container: '#audio-spectrum',
                    progressColor: "#03a9f4",
                    barHeight: 3
            
                });

                // Handle Play button
                buttons.play.addEventListener("click", function () {
                    Spectrum.play();

                    toSpeak = new SpeechSynthesisUtterance(inputText.value); // speache request and info
                    var selectedVoiceName = voiceList.selectedOptions[0].getAttribute('data-name'); // set the selsected language
                    voices.forEach((voice) => {
                        if (voice.name === selectedVoiceName) {// find the selected one 
                            toSpeak.voice = voice;
                        }
                    });
                     tts.speak(toSpeak); // speake the text 
                     
                    // Enable/Disable respectively buttons
                    buttons.stop.disabled = false;
                    buttons.pause.disabled = false;
                    buttons.play.disabled = true;

                }, false);

                // Handle Pause button
                buttons.pause.addEventListener("click", function () {
                    Spectrum.pause();

                    // Enable/Disable respectively buttons
                    buttons.pause.disabled = true;
                    buttons.play.disabled = false;
                }, false);


                // Handle Stop button
                buttons.stop.addEventListener("click", function () {
                    Spectrum.stop();

                    // Enable/Disable respectively buttons
                    buttons.pause.disabled = true;
                    buttons.play.disabled = false;
                    buttons.stop.disabled = true;
                }, false);


                // Add a listener to enable the play button once it's ready
                Spectrum.on('ready', function () {
                    buttons.play.disabled = false;
                });

                // If you want a responsive mode (so when the user resizes the window)
                // the spectrum will be still playable
                window.addEventListener("resize", function () {
                    // Get the current progress according to the cursor position
                    var currentProgress = Spectrum.getCurrentTime() / Spectrum.getDuration();

                    // Reset graph
                    Spectrum.empty();
                    Spectrum.drawBuffer();
                    // Set original position
                    Spectrum.seekTo(currentProgress);

                    // Enable/Disable respectively buttons
                    buttons.pause.disabled = true;
                    buttons.play.disabled = false;
                    buttons.stop.disabled = false;

 

                }, false);


                var voiceList = document.querySelector('#voiceList');
                var inputText = document.querySelector('#inputText');
                var btnSpeak = document.querySelector('#btnSpeak');


                var tts = window.speechSynthesis; // get windows speech API
                var voices = [];   // list of all supported voice store here


                getVoices();
                if (speechSynthesis !== undefined) {
                    speechSynthesis.onvoiceschanged = getVoices;
                }

                // button click
                
                btnSpeak.addEventListener('click', () => {
                    var toSpeak = new SpeechSynthesisUtterance(inputText.value); // speache request and info
                    var selectedVoiceName = voiceList.selectedOptions[0].getAttribute('data-name'); // set the selsected language
                    voices.forEach((voice) => {
                        if (voice.name === selectedVoiceName) {// find the selected one 
                            toSpeak.voice = voice;
                        }
                    });
                    tts.speak(toSpeak); // speake the text 
                   // console.log(tts.speak(toSpeak));
                  // Spectrum.loadBlob(toSpeak)
                })
                

                // find all suported voice
                function getVoices() {
                    voices = tts.getVoices();
                    voiceList.innerHTML = '';
                    voices.forEach((voice) => {
                        var listItem = document.createElement('option');
                        listItem.textContent = voice.name;
                        listItem.setAttribute('data-lang', voice.lang);
                        listItem.setAttribute('data-name', voice.name);
                        voiceList.appendChild(listItem); // push ecahc voice to the selece field
                    })
                    voiceList.selectedIndex = 0;
                }

                // Load the audio file from your domain !
               // Spectrum.load(toSpeak)

               Spectrum.load('FileName.mp3');
                  
            </script>
</body>

</html>